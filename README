This is a set of classes (and bundled pure-python versions of pexpect
and ping) to control a Baytech RPC3. 

pexpect is courtesy of Noah Spurrier 
http://www.noah.org/wiki/pexpect

Pure Python Ping code Ping is Copyright (c) Matthew Dixon Cowles,
http://www.visi.com/~mdc/

USAGE
-----

Create a file in your working directory called ".credentials". This file
should contain the following:

IP address of RPC3:username:password

Then, in your script, you can call:

from rpc3Control import *
(RPC, RPCUSER, RPCPASS) = load_credentials()

""" or, if you change the credentials filename, you can do... """
(RPC, RPCUSER, RPCPASS) = load_credentials("filename")

Control is pretty straightfoward. First, connect to the RPC:
(Instantiating an instance of the class will handle the initial connection)

r = rpc3Control(RPC, RPCUSER, RPCPASS, False)

...and then you can issue commands, like:

r.outlet(5,"on")
r.outlet(5,"off")
r.outlet(5,"reboot")

To get status, use outlet_status, which will return True or False for On or Off.

state = r.outlet_status(5)

I'm using this at home to restart my DSL modem in the event of network failure. 

For a more indepth example, see the check_dsl.py script.

---
John Adams
November, 2011
